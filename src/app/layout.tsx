// Generated by Lasy AI — https://lasy.ai
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import Script from "next/script";
import { Toaster } from "sonner";
import { ThemeProvider } from "@/components/theme-provider";
import "./globals.css";
// Se seu projeto tem esse import, mantenha. Se não existir, pode remover a linha abaixo.
import "../lib/fonts";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "KIMAAKI – Entrega rápida na sua porta",
  description: "Entrega rápida na sua porta em Luanda",
  icons: {
    icon: "/icon.png",     // favicon da aba do navegador
    shortcut: "/icon.png",
    apple: "/icon.png",    // ícone para iPhone/iPad
  },
  manifest: "/manifest.json", // PWA
  themeColor: "#4CAF50",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="pt-BR" suppressHydrationWarning>
      <head>
        {/* Script da Lasy (mantido) */}
        <Script src="/lasy-bridge.js" strategy="beforeInteractive" />

        {/* PWA / iOS */}
        <meta name="apple-mobile-web-app-capable" content="yes" />
        <meta name="apple-mobile-web-app-status-bar-style" content="default" />
        <meta name="apple-mobile-web-app-title" content="KIMAAKI" />
        <meta name="mobile-web-app-capable" content="yes" />
        <meta name="theme-color" content="#4CAF50" />

        {/* Favicons (navegador e iOS) */}
        <link rel="icon" href="/icon.png" type="image/png" />
        <link rel="apple-touch-icon" href="/icon.png" />

        {/* Manifest PWA */}
        <link rel="manifest" href="/manifest.json" />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          {children}

          {/* Toaster (mantido) — ajuste as opções se você já usava outras */}
          <Toaster position="top-center" richColors closeButton />
        </ThemeProvider>
      </body>
    </html>
  );
}
